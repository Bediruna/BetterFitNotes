@page "/traininglog/{ExerciseId:int}"
@layout BFL.App.Components.Layout.BlankLayout

@if (exercise == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="sticky-top">
        <div class="navbar navbar-dark bg-dark">
            <div class="container-fluid justify-content-between">
                <NavLink class="navbar-brand fs-4" href="" Match="NavLinkMatch.All">
                    BetterFitLogs
                </NavLink>
                <NavLink class="nav-link fs-2" href="calendar">
                    <CalendarIcon />
                </NavLink>
                <NavLink class="nav-link fs-1" href="categories">
                    <span style="color: white;">+</span>
                </NavLink>
                <NavLink class="nav-link fs-2" href="settings">
                    <SettingsIcon />
                </NavLink>
            </div>
        </div>
        <div class="d-flex justify-content-between tab-container">
            <button class="flex-grow-1 tab-button @((selectedTab == "track" ? "active" : ""))" @onclick='() => { selectedTab = "track"; }'>TRACK</button>
            <button class="flex-grow-1 tab-button @((selectedTab == "history" ? "active" : ""))" @onclick='() => { selectedTab = "history"; }'>HISTORY</button>
            @* <button class="flex-grow-1 tab-button @((selectedTab == "analyze" ? "active" : ""))" @onclick='() => { selectedTab = "analyze"; }'>ANALYZE</button> *@
        </div>
    </div>

    <div class="p-3">
        <h1>@exercise.Name</h1>

        @if (selectedTab == "track")
        {
            <EditForm Model="@selectedLog" OnValidSubmit="HandleValidSubmit">
                <div>
                    <label for="metricWeight">Weight (lbs):</label>
                    <div class="input-group mb-3">
                        <button class="btn btn-secondary px-4" type="button" @onclick="DecrementWeight">-</button>
                        <InputNumber @bind-Value="selectedLog.MetricWeight" id="metricWeight" class="form-control text-center" />
                        <button class="btn btn-secondary px-4" type="button" @onclick="IncrementWeight">+</button>
                    </div>
                </div>
                <div>
                    <label for="reps">Reps:</label>
                    <div class="input-group mb-3">
                        <button class="btn btn-secondary px-4" type="button" @onclick="DecrementReps" disabled="@((selectedLog.Reps <= 1))">-</button>
                        <InputNumber @bind-Value="selectedLog.Reps" id="reps" class="form-control text-center" />
                        <button class="btn btn-secondary px-4" type="button" @onclick="IncrementReps">+</button>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-6">
                        <button type="submit" class="btn @(isEditMode ? "btn-success" : "btn-primary") w-100">@primaryButtonText</button>
                    </div>
                    <div class="col-6">
                        <button type="button" @onclick="ClearOrDelete" class="btn @(isEditMode ? "btn-danger" : "btn-secondary") w-100">@secondaryButtonText</button>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }
            </EditForm>
            @if (logsForSelectedDate.Any())
            {
                <table class="table">
                    <tbody>
                        @for (int i = 0; i < logsForSelectedDate.Count; i++)
                        {
                            var currentLog = logsForSelectedDate[i];
                            <tr @onclick="() => SelectLog(currentLog)" class="@(selectedLog.Id == currentLog.Id ? "table-info" : "")">
                                <td>
                                    @(i + 1)
                                    @if (personalRecords.ContainsKey(currentLog.Reps) && currentLog.MetricWeight >= personalRecords[currentLog.Reps])
                                    {
                                        <span>
                                            <Icons:TrophyIcon />
                                        </span>
                                    }
                                </td>
                                <td>@currentLog.MetricWeight lbs</td>
                                <td>@currentLog.Reps reps</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
        else if (selectedTab == "history")
        {
            <h3>History</h3>
            @foreach (var group in exerciseLogs.GroupBy(log => log.LogDate.Date).OrderByDescending(g => g.Key))
            {
                <h5>@group.Key.ToString("D")</h5>
                <table class="table">
                    <thead>
                        <tr>
                            <th>Weight (lbs)</th>
                            <th>Reps</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var log in group.OrderBy(log => log.LogDate))
                        {
                            <tr>
                                <td>@log.MetricWeight lbs</td>
                                <td>@log.Reps reps</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        }
        else if (selectedTab == "analyze")
        {
            <div>
                <!-- Analyze tab content here -->
                <h3>analyze</h3>
            </div>
        }
    </div>
}